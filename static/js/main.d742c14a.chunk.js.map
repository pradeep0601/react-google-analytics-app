{"version":3,"sources":["Buy.js","App.js","reportWebVitals.js","index.js"],"names":["Buy","useState","isBought","buy","clickHandler","ReactGA","pageview","event","category","action","label","className","onClick","App","props","useEffect","initialize","gaOptions","userId","shortUuid","generate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAgCeA,MA7Bf,WAAgB,IAAD,EACaC,oBAAS,GADtB,mBACJC,EADI,KACMC,EADN,KAGLC,EAAe,SAACF,GAClBC,EAAID,GACDA,GACCG,IAAQC,SAAS,YACjBD,IAAQE,MAAM,CACVC,SAAU,SACVC,OAAQ,mBACRC,MAAO,SAIXL,IAAQC,SAAS,cAIzB,OACI,gCACKJ,EAAW,iCAAmC,gCAC/C,uBAEIA,EAAW,wBAAQS,UAAY,WAAWC,QAAW,kBAAMR,GAAa,IAA7D,kBACT,wBAAQO,UAAY,UAAUC,QAAW,kBAAMR,GAAa,IAA5D,qBCCHS,MArBf,SAAcC,GAWZ,OAVAC,qBAAU,WACRV,IAAQW,WAAW,iBAAkB,CACnCC,UAAW,CACTC,OAAO,YAAD,OAAcC,IAAUC,eAIlCf,IAAQC,SAAS,gBAIjB,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mEACA,cAAC,EAAD,UCVOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d742c14a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction Buy() {\r\n    const [isBought, buy] = useState(false);\r\n    \r\n    const clickHandler = (isBought) => {\r\n        buy(isBought);\r\n        if(isBought) {\r\n            ReactGA.pageview('Buy page');\r\n            ReactGA.event({\r\n                category: 'Button',\r\n                action: \"Buy Button Click\",\r\n                label: 'Buy'\r\n            });\r\n        }\r\n        else {\r\n            ReactGA.pageview('Home page');\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            {isBought ? \"You have bought successfully!!\" : \"Discount: No, Regular price!!\"}\r\n            <br></br>\r\n            {\r\n                isBought ? <button className = 'back-btn' onClick = {() => clickHandler(false)}>Back</button>\r\n                : <button className = 'buy-btn' onClick = {() => clickHandler(true)}>Buy</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Buy;\r\n","import React, {useEffect} from 'react';\r\nimport shortUuid from 'short-uuid'\r\nimport ReactGA from 'react-ga';\r\n\r\nimport './App.css';\r\nimport Buy from './Buy';\r\n\r\nfunction App (props) {\r\n  useEffect(() => {\r\n    ReactGA.initialize('UA-184174345-3', {\r\n      gaOptions: {\r\n        userId: `testuser-${shortUuid.generate()}`\r\n      }\r\n    });\r\n    // to report page views\r\n    ReactGA.pageview('Home page');\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2>Google Analytics React Sample App</h2>\r\n        <Buy></Buy>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}